{"version":3,"file":"components-image-carousel-ImageCarouselPaginate-stories.8876c921.iframe.bundle.js","mappings":";;;;AAeA;;;;;;AAMA;;;;;;;;;;AAcA;;;;;;;AASA;;;;;;;AASA;;;;;;;;;AAWA;;;;;AAKA;AACA;;;;;;AAMA;;;;;;;AAWA;;;;;AAOA","sources":["webpack://guardian-portal-storybook/./src/components/image-carousel/ImageCarouselPaginate.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ImageCarouselPaginateProps {\r\n  images: Array<{\r\n    url: string;\r\n    title: string;\r\n    body: string;\r\n  }>;\r\n}\r\n\r\nconst CarouselContainer = styled.div<{ backgroundImage: string }>`\r\n  width: 639px;\r\n  height: 390px;\r\n  border-radius: 8px;\r\n  background-image: linear-gradient(to bottom, rgba(0,0,0,0) 0%, rgba(0,0,0,0.75) 100%), url(${props => props.backgroundImage});\r\n  background-size: cover;\r\n  background-position: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  height: 89px;\r\n  align-self: stretch;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  gap: 4px;\r\n  padding: 16px;\r\n  background-color: rgba(0, 0, 0, 0.75);\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-family: 'Libre Franklin', sans-serif;\r\n  font-size: 28px;\r\n  font-weight: normal;\r\n  line-height: normal;\r\n  color: #ffffff;\r\n  margin: 0 0 4px 0;\r\n`;\r\n\r\nconst Body = styled.p`\r\n  font-family: 'Libre Franklin', sans-serif;\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  line-height: normal;\r\n  color: #ffffff;\r\n  margin: 0;\r\n`;\r\n\r\nconst PaginationContainer = styled.div`\r\n  height: 32px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 6px;\r\n  padding: 8px;\r\n  background-color: rgba(0, 0, 0, 0.75);\r\n`;\r\n\r\nconst PageButton = styled.button<{ active?: boolean }>`\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  border: none;\r\n  background-color: ${props => props.active ? '#ffffff' : 'rgba(255, 255, 255, 0.5)'};\r\n  color: ${props => props.active ? '#000000' : '#ffffff'};\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst NavigationButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: #ffffff;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n  padding: 0 4px;\r\n`;\r\n\r\nconst PageCounter = styled.span`\r\n  color: #ffffff;\r\n  font-family: 'Libre Franklin', sans-serif;\r\n  font-size: 14px;\r\n  margin: 0 10px;\r\n`;\r\n\r\nexport const ImageCarouselPaginate: React.FC<ImageCarouselPaginateProps> = ({ images }) => {\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    setCurrentPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <CarouselContainer backgroundImage={images[currentPage].url}>\r\n      <Content>\r\n        <Title>{images[currentPage].title}</Title>\r\n        <Body>{images[currentPage].body}</Body>\r\n      </Content>\r\n      <PaginationContainer>\r\n        <NavigationButton onClick={() => handlePageChange(0)}>{\"<<\"}</NavigationButton>\r\n        <NavigationButton onClick={() => handlePageChange(Math.max(0, currentPage - 1))}>{\"<\"}</NavigationButton>\r\n        {images.map((image, index) => (\r\n          <PageButton\r\n            key={`page-button-${image.url}`}\r\n            active={index === currentPage}\r\n            onClick={() => handlePageChange(index)}\r\n          >\r\n            {index + 1}\r\n          </PageButton>\r\n        ))}\r\n        <NavigationButton onClick={() => handlePageChange(Math.min(images.length - 1, currentPage + 1))}>{\">\"}</NavigationButton>\r\n        <NavigationButton onClick={() => handlePageChange(images.length - 1)}>{\">>\"}</NavigationButton>\r\n        <PageCounter>{currentPage + 1} of {images.length}</PageCounter>\r\n      </PaginationContainer>\r\n    </CarouselContainer>\r\n  );\r\n};\r\n"],"names":[],"sourceRoot":""}